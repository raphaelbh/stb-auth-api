{
	"info": {
		"_postman_id": "4164ac60-7237-4ad9-8b81-6f5f7400da0d",
		"name": "stb-authentication-integration-tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "user signup",
			"item": [
				{
					"name": "user signup: no api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"raphaeldias.ti+testing@gmail.com\",\n    \"password\": \"Mudar@123\",\n    \"attributes\": [{\n        \"Name\": \"name\",\n        \"Value\": \"Raphael Oliveira\"\n    }, {\n        \"Name\": \"email\",\n        \"Value\": \"raphaeldias.ti+testing@gmail.com\"\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "user signup: invalid api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "x-api-key",
								"value": "invalid-api-key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"raphaeldias.ti+testing@gmail.com\",\n    \"password\": \"Mudar@123\",\n    \"attributes\": [{\n        \"Name\": \"name\",\n        \"Value\": \"Raphael Oliveira\"\n    }, {\n        \"Name\": \"email\",\n        \"Value\": \"raphaeldias.ti+testing@gmail.com\"\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "user signup: success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"  pm.response.to.have.status(201);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"raphaeldias.ti+testing@gmail.com\",\n    \"password\": \"Mudar@123\",\n    \"attributes\": [{\n        \"Name\": \"name\",\n        \"Value\": \"Raphael Oliveira\"\n    }, {\n        \"Name\": \"email\",\n        \"Value\": \"raphaeldias.ti+testing@gmail.com\"\n    }]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "login",
			"item": [
				{
					"name": "user login: no api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"raphaeldias.ti+testing@gmail.com\",\n    \"password\": \"Mudar@123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user login: invalid api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"warning": "This is a duplicate header and will be overridden by the x-api-key header generated by Postman.",
								"key": "x-api-key",
								"value": "invalid-api-key",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"raphaeldias.ti+testing@gmail.com\",\n    \"password\": \"Mudar@123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user login: success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"",
									"  const responseJson = pm.response.json();",
									"  pm.expect(responseJson.access_token).to.be.not.empty;",
									"  pm.expect(responseJson.refresh_token).to.be.not.empty;",
									"  pm.expect(responseJson.id_token).to.be.not.empty;",
									"  pm.expect(responseJson.expires_in).to.eql(300);",
									"",
									"  pm.collectionVariables.set(\"id_token\", responseJson.id_token);",
									"  pm.collectionVariables.set(\"access_token\", responseJson.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"raphaeldias.ti+testing@gmail.com\",\n    \"password\": \"Mudar@123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "logout",
			"item": [
				{
					"name": "user logout: no api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "user logout: invalid api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "invalid-api-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "user logout: no authorization (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "user logout: invalid authorization (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid-id-token",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "user logout: invalid access_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"  pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "eyJraWQiOiJJeW...",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "user logout: success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users/logout",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"logout"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "delete",
			"item": [
				{
					"name": "user login: success (need to delete)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"  pm.response.to.have.status(200);",
									"",
									"  const responseJson = pm.response.json();",
									"  pm.collectionVariables.set(\"id_token\", responseJson.id_token);",
									"  pm.collectionVariables.set(\"access_token\", responseJson.access_token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"raphaeldias.ti+testing@gmail.com\",\n    \"password\": \"Mudar@123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "user delete: no api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "user delete: invalid api-key (forbidden)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"  pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							},
							{
								"key": "x-api-key",
								"value": "invalid-api-key",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "user delete: no authorization (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "user delete: invalid authorization (unauthorized)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"  pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid-id-token",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "user delete: invalid access_token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 500\", function () {",
									"  pm.response.to.have.status(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "eyJraWQiOiJJeW...",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "user delete: success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {",
									"  pm.response.to.have.status(204);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{id_token}}",
								"type": "text"
							},
							{
								"key": "Access-Token",
								"value": "{{access_token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "{{api_key}}",
				"type": "string"
			},
			{
				"key": "key",
				"value": "x-api-key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "access_token",
			"value": "",
			"type": "string"
		}
	]
}