AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Authentication Application

Parameters:
  Project:
    Type: String
    Default: stb
  Application:
    Type: String
    Default: authentication
  Stage:
    Type: String
    Default: dev
  QuotaLimit:
    Type: Number
    Default: 500

Resources:

  # --- Cognito
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Join ["", [{"Ref": "Project"}, "-", {"Ref": "Application"}, "-", {"Ref": "Stage"}]]
      UsernameAttributes:
        - email
  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      ClientName: !Join ["", [{"Ref": "Project"}, "-", {"Ref": "Application"}, "-", {"Ref": "Stage"}]]
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      UserPoolId: !Ref CognitoUserPool
  
  # --- Auth Api Gateway
  AuthApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Join ["", [{"Ref": "Project"}, "-", {"Ref": "Application"}, "-", {"Ref": "Stage"}]]
      StageName: !Ref Stage
      Auth:
        ApiKeyRequired: true
        UsagePlan:
          UsagePlanName: !Join ["", [{"Ref": "Project"}, "-", {"Ref": "Application"}, "-", {"Ref": "Stage"}]]
          CreateUsagePlan: PER_API
          Quota: 
            Limit: !Ref QuotaLimit
            Period: DAY

  # --- Sign Up Function
  SignUpFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join ["", [{"Ref": "Project"}, "-", {"Ref": "Application"}, "-", "signup", "-", {"Ref": "Stage"}]]
      CodeUri: application/signup
      Handler: app.lambda_handler
      Runtime: python3.9
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminConfirmSignUp
              Resource: !GetAtt CognitoUserPool.Arn
      Environment:
        Variables:
          USER_POOL_ID: !Ref CognitoUserPool
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
      Events:
        SignUpEvent:
          Type: Api
          Properties:
            Path: /signup
            Method: post
            RestApiId:
              Ref: AuthApiGateway

  # --- Login Function
  LoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Join ["", [{"Ref": "Project"}, "-", {"Ref": "Application"}, "-", "login", "-", {"Ref": "Stage"}]]
      CodeUri: application/login
      Handler: app.lambda_handler
      Runtime: python3.9
      Environment:
        Variables:
          USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient
      Events:
        LoginEvent:
          Type: Api
          Properties:
            Path: /login
            Method: post
            RestApiId:
              Ref: AuthApiGateway

Outputs:
  SignUpApi:
    Description: "API Gateway endpoint URL for stage for Sign Up function"
    Value: !Sub "https://${AuthApiGateway}.execute-api.${AWS::Region}.amazonaws.com/"
  SignUpFunction:
    Description: "Sign Up Lambda Function ARN"
    Value: !GetAtt SignUpFunction.Arn
  SignUpFunctionIamRole:
    Description: "Implicit IAM Role created for Sign Up function"
    Value: !GetAtt SignUpFunctionRole.Arn
  CognitoUserPoolId:
    Description: "Cognito User Pool ID"
    Value: !Ref CognitoUserPool
  CognitoUserPoolClientId:
    Description: "Cognito User Pool Client ID"
    Value: !Ref CognitoUserPoolClient
